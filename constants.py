class GAME:
    '''
    SCREEN_WIDTH = 320
    SCREEN_HEIGHT = 240
    PLAY_AREA_HEIGHT = 210
    MOVE_LENGTH = 8
    PLAYER1_XPOS = 80
    PLAYER1_YPOS = 176
    PLAYER2_XPOS = 160
    PLAYER2_YPOS = 176
    '''
    SCREEN_WIDTH = 640
    SCREEN_HEIGHT = 480
    PLAY_AREA_HEIGHT = 430
    MOVE_LENGTH = 16
    PLAYER1_XPOS = 160
    PLAYER1_YPOS = 304
    PLAYER2_XPOS = 320
    PLAYER2_YPOS = 304
    NUM_OF_GAMES = 1
    #ITERATIONS_IN_EVOLUTION#19200


class TEXT_AREA:
    SEPERATOR_XPOS = GAME.SCREEN_WIDTH / 2
    SEPERATOR_YSTART = GAME.PLAY_AREA_HEIGHT
    SEPERATOR_YEND = GAME.SCREEN_HEIGHT
    GAME_SCORE_XPOS = SEPERATOR_XPOS + 10
    GAME_SCORE_YPOS = GAME.PLAY_AREA_HEIGHT + 10
    PLAYER1_WINS_YPOS = GAME.PLAY_AREA_HEIGHT + 10
    PLAYER2_WINS_YPOS = GAME.PLAY_AREA_HEIGHT + 30


class Directions:
    NORTH = 0
    EAST = 90
    SOUTH = 180
    WEST = 270


class COLOR:
    RED = (255, 0, 0)
    BLUE = (0, 0, 255)

class NEURALNET:
    '''
    Inputs considered
        POSITION_X TRON2
        POSITION_Y TRON2

        POSITION_X TRON1
        POSITION_Y TRON1

        ARE THE BELOW MOVES VALID
        LEFT 1/0
        RIGHT 1/0
        FRONT 1/0
    OUTPUT:
    LEFT , RIGHT , PREV MOVE
    '''

    NO_OF_INPUTS_X = 7
    NO_OF_INPUTS_HIDDEN1 = 15
    NO_OF_INPUTS_HIDDEN2 = 21
    NO_OF_OUTPUTS_Y = 3
    NO_OF_WEIGHTS =  NO_OF_INPUTS_X*NO_OF_INPUTS_HIDDEN1 + NO_OF_INPUTS_HIDDEN1*NO_OF_INPUTS_HIDDEN2 + NO_OF_INPUTS_HIDDEN2*NO_OF_OUTPUTS_Y
    W1_shape = (NO_OF_INPUTS_HIDDEN1, NO_OF_INPUTS_X)
    W2_shape = (NO_OF_INPUTS_HIDDEN2, NO_OF_INPUTS_HIDDEN1)
    W3_shape = (NO_OF_OUTPUTS_Y, NO_OF_INPUTS_HIDDEN2)
    PLAYER2DEAD = -500
    PLAYER1DEAD = 1000
    PLAYER2SELF = -500
    PLAYER1ALIVE = -5

class GENTICSOLUTION:
    SOL_PER_POP = 50
    POP_SIZE = (SOL_PER_POP, NEURALNET.NO_OF_WEIGHTS)
    NUM_GENERATIONS = 100
    NUM_PARENTS_MATCHING = 12

